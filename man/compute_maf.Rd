% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/character_maf.R, R/maf.R
\name{compute_maf}
\alias{compute_maf}
\alias{compute_maf}
\title{Minor Allele Frequency}
\usage{
compute_maf(x, output = c("marker_names", "marker_maf", "recoded"), missing,
  maf_threshold)

compute_maf(x, output = c("marker_names", "marker_maf", "recoded"), missing,
  maf_threshold)
}
\arguments{
\item{x}{A matrix. Genotype names are stored in rows whereas marker names
are stored in columns.}

\item{output}{Character vector with output options.}

\item{missing}{Character vector providing the encoding of missing elements.}

\item{maf_threshold}{Numeric or complex vector specifying the minor allele
frequency threshold.}

\item{x}{A matrix. Genotype names are stored in rows whereas marker names
are stored in columns.}

\item{output}{Character vector with output options.}

\item{missing}{Character vector providing the encoding of missing elements.}

\item{maf_threshold}{Numeric or complex vector specifying the minor allele
frequency threshold.}
}
\value{
If \code{output} is "marker_names" a character vector with marker
 names that have passed the quality check will be returned. If \code{output}
 is "marker_maf" a numeric vector with the minor allele frequency at each
 marker locus will be returned. If \code{output} is "recoded" a matrix with
 the original dimensions will be returned where the most frequent genotype at
 each locus will be encoded as the highest value and the least frequent
 genotype will be encoded as the smalles value in \code{x}.

If \code{output} is "marker_names" a character vector with marker
 names that have passed the quality check will be returned. If \code{output}
 is "marker_maf" a numeric vector with the minor allele frequency at each
 marker locus will be returned. If \code{output} is "recoded" a matrix with
 the original dimensions will be returned where the most frequent genotype at
 each locus will be encoded as the highest value and the least frequent
 genotype will be encoded as the smalles value in \code{x}.
}
\description{
\code{compute_maf} returns results from minor allele frequency checks

\code{compute_maf} returns results from minor allele frequency checks
}
\examples{
 # Load a matrix with SNP genotypes encoded as numeric values
 data(marker_numeric)

 # Return the names of all polymorphic markers.
 compute_maf(marker_numeric, output = "markerNames", missing = NA_real_,
             mafThresh = 0)

 # Set one locus to monomorphic
 marker_mono <- marker_numeric
 marker_mono[, 1] <- 1
 compute_maf(marker_numeric, output = "markerNames", missing = NA_real_,
             mafThresh = 0)

 # Load a matrix with SNP genotypes encoded as character values
 data(marker_character)

 # Return the minor allele frequency at each locus with MAF >= 0.05.
 compute_maf(marker_character, output = "markerMAF", missing = "??",
             mafThresh = 0.05)

 # Return the genotype of the major as well as of the minor allele at each
 # locus.
 compute_maf(marker_character, output = "genoList", missing = "??",
             mafThresh = 0)
 # Load a matrix with SNP genotypes encoded as numeric values
 data(marker_numeric)

 # Return the names of all polymorphic markers.
 compute_maf(marker_numeric, output = "marker_names", missing = NA_real_,
             mafThresh = 0)

 # Set one locus to monomorphic
 marker_mono <- marker_numeric
 marker_mono[, 1] <- 1
 compute_maf(marker_numeric, output = "marker_names", missing = NA_real_,
             mafThresh = 0)

 # Load a matrix with SNP genotypes encoded as character values
 data(marker_character)

 # Return the minor allele frequency at each locus with MAF >= 0.05.
 compute_maf(marker_character, output = "marker_maf", missing = "??",
             mafThresh = 0.05)

 # Return the genotype of the major as well as of the minor allele at each
 # locus.
 compute_maf(marker_character, output = "recoded", missing = "??",
             mafThresh = 0)
}
